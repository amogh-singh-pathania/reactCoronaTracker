{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Cards/Cards.jsx","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/NavigationBar/NavigationBar.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","images/image.png"],"names":["module","exports","url","fetchData","country","a","changableUrl","axios","get","data","modifiedData","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Cards","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","option","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","ButtonAppBar","classes","AppBar","position","Toolbar","IconButton","edge","aria-label","href","App","state","fetchedData","setState","this","image","src","alt","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92ddd0c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__YAP-D\",\"card\":\"Cards_card__e9kvW\",\"infected\":\"Cards_infected__zZX_t\",\"recovered\":\"Cards_recovered__32F4u\",\"deaths\":\"Cards_deaths__2hYuy\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changableUrl = url;\r\n    if(country){\r\n        changableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try{\r\n        const { data } = await axios.get(changableUrl);\r\n        const modifiedData = {\r\n            confirmed: data.confirmed,\r\n            recovered: data.recovered,\r\n            deaths: data.deaths,\r\n            lastUpdate: data.lastUpdate,\r\n        }\r\n        \r\n        return modifiedData;\r\n\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n    \r\n}\r\n\r\nexport const fetchDailyData = async ()=>{\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths : dailyData.deaths.total,\r\n            date : dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n\r\n}\r\n\r\nexport const fetchCountries = async ()=>{\r\n    try{\r\n        const {data : { countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch(error){\r\n        console.log(error);\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid, StylesProvider } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css'\r\n\r\nconst Cards =({data :{confirmed , recovered, deaths, lastUpdate} }) =>{\r\n    if(!confirmed){\r\n        return \"Loading....\";\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration ={1.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                          <CountUp start={0} end={recovered.value} duration ={1.5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                          <CountUp start={0} end={deaths.value} duration ={1.5} separator=\",\" />    \r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import React, { useState , useEffect }from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line , Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css'\r\n\r\nconst Chart =({ data , country }) =>{\r\n    const [dailyData, setDailyData] =useState([]);\r\n    useEffect(() => {\r\n       const fetchAPI = async () =>{\r\n           setDailyData(await fetchDailyData());\r\n       }\r\n\r\n       fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length !== 0\r\n        ? (\r\n        <Line\r\n        data ={{\r\n            labels : dailyData.map(({ date } )=> date),\r\n            datasets:[{\r\n                data : dailyData.map(({ confirmed }) => confirmed),\r\n                label: 'Infected',\r\n                borderColor : '#3333ff',\r\n                fill : true,\r\n            },{\r\n                data : dailyData.map(({ deaths })=> deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                fill: true,\r\n            }],\r\n        }}\r\n        />): null\r\n    );\r\n\r\n    const barChart = (\r\n        data.confirmed ?\r\n        (\r\n            <Bar \r\n            data={{\r\n                labels :['Infected' , 'Recovered' , 'Deaths'],\r\n                datasets : [{\r\n                    label: 'People',\r\n                    backgroundColor:   [\r\n                        'rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)' ,'rgba(255, 0, 0, 0.5)'\r\n                    ],\r\n                    data : [data.confirmed.value, data.recovered.value , data.deaths.value],\r\n                }]    \r\n            }}\r\n            option={{\r\n                legend: {display : false },\r\n                title :{ display: true , text: `Current state is ${country}`},\r\n            }}\r\n            />\r\n        ):null);\r\n\r\n    \r\n    return (\r\n        <h1 className={styles.container}>\r\n            {country ? barChart : lineChart }\r\n        </h1>\r\n    )\r\n}\r\n\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker =({handleCountryChange}) =>{\r\n\r\n    const [ fetchedCountries, setFetchedCountries ] = useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI= async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    \r\n\r\n    return (\r\n       <FormControl className={styles.container}>\r\n           <NativeSelect defaultValue=\"\" onChange={(e) =>handleCountryChange(e.target.value)}>\r\n               <option value=\"\"> Global</option>\r\n    {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" href=\"https://www.linkedin.com/in/a1bhi2/\">\r\n            <LinkedInIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Abhishek Gupta\r\n          </Typography>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" href=\"https://github.com/a1bhi2/\">\r\n            <GitHubIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styles from './App.module.css';\r\n\r\nimport { fetchData } from './api';\r\nimport { Cards , Chart , CountryPicker } from './components';\r\nimport image from './images/image.png';\r\nimport ButtonAppBar from './components/NavigationBar/NavigationBar';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country:'',\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data:fetchedData });\r\n    \r\n  }\r\n\r\n  handleCountryChange = async (country) =>{\r\n    const fetchedData = await fetchData(country);\r\n    \r\n    this.setState({ data : fetchedData , country :country });\r\n  }\r\n  render(){\r\n    const { data, country } = this.state;\r\n    return (\r\n    <div>\r\n      <ButtonAppBar />\r\n      <div className={styles.container} >\r\n      <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n      < Cards data={data} />\r\n      < CountryPicker handleCountryChange={this.handleCountryChange} />\r\n      < Chart data={data} country={country} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3FenP\",\"image\":\"App_image__1t3w8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1nL_o\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}